@model OnlineExam.Core.DTOs.Program.ExamDto.AddExamWithQuestionsDto
@using OnlineExam.Core.Enums

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Create New Quiz</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    <link rel="stylesheet" href="../../../css/admin.css">
</head>
<body>
    <div class="d-flex" id="wrapper">
        <!-- Sidebar (same as dashboard) -->
        <div class="bg-secondary text-white" id="sidebar-wrapper">
            <div class="sidebar-heading border-bottom text-center py-3">
                <h4><i class="fas fa-tachometer-alt text-warning me-2"></i>Quiz Admin</h4>
            </div>
            <div class="list-group list-group-flush gap-3 mt-3">
                <a href="../dashboard.html" class="list-group-item list-group-item-action bg-secondary text-white">
                    <i class="fas fa-tachometer-alt me-2"></i>Dashboard
                </a>
                <a href="list.html" class="list-group-item list-group-item-action bg-secondary text-white active">
                    <i class="fas fa-question-circle me-2"></i>Quizzes
                </a>
                <a href="../users/list.html" class="list-group-item list-group-item-action bg-secondary text-white">
                    <i class="fas fa-users me-2"></i>Users
                </a>
                <a href="../reports/grades.html" class="list-group-item list-group-item-action bg-secondary text-white">
                    <i class="fas fa-chart-bar me-2"></i>Reports
                </a>
                <a href="#" id="logoutBtn" class="list-group-item list-group-item-action bg-secondary text-white">
                    <i class="fas fa-sign-out-alt me-2"></i>Logout
                </a>
            </div>
        </div>
        <!-- Page Content -->
        <div id="page-content-wrapper">
            <nav class="navbar navbar-expand-lg navbar-secondary bg-secondary py-3 border-start">
                <div class="container-fluid">
                    <button class="btn btn-primary" id="menu-toggle">
                        <i class="fas fa-bars"></i>
                    </button>
                    <h4 class="ms-3 mb-0">Create New Quiz</h4>
                    <div class="ms-auto">
                        <a href="list.html" class="btn btn-outline-secondary">
                            <i class="fas fa-arrow-left me-1"></i>Back to Quizzes
                        </a>
                    </div>
                </div>
            </nav>

            <div class="container-fluid px-4 py-4">
                <div id="alerts-container"></div>

                <div class="card mb-4">
                    <div class="card-header bg-white">
                        <h5 class="mb-0">Quiz Information</h5>
                    </div>
                    <div class="card-body">
                        @using (Html.BeginForm("Create", "Exam", FormMethod.Post))
                        {
                            <!-- Quiz Title -->
                            <div class="mb-3">
                                <label for="quizTitle" class="form-label">Quiz Title</label>
                                @Html.TextBoxFor(m => m.Exam.Title, new { @class = "form-control", required = "required" })
                            </div>
                            <!-- Difficulty -->
                            <div class="mb-3">
                                <label for="quizDifficulty" class="form-label">Difficulty</label>
                                @Html.DropDownListFor(m => m.Exam.Difficulty,
                                         new SelectList(Enum.GetValues(typeof(ExamDifficulty))),
                                         "Select Difficulty", new { @class = "form-select", required = "required" })
                            </div>

                            <!-- Questions Container -->
                            <div class="card mt-3">
                                <div class="card-header bg-white d-flex justify-content-between align-items-center">
                                    <h5 class="mb-0">Questions</h5>
                                    <button type="button" class="btn btn-sm btn-primary" id="addQuestionBtn">
                                        <i class="fas fa-plus me-1"></i>Add Question
                                    </button>
                                </div>
                                <div class="card-body">
                                    <div id="questionsContainer">
                                        @for (int i = 0; i < Model.Questions.Count; i++)
                                        {
                                            <div class="mb-3">
                                                <label for="questionTitle" class="form-label">Question @i</label>
                                                @Html.TextBoxFor(m => m.Questions[i].Title, new { @class = "form-control", required = "required" })
                                                <label class="form-label mt-2">Choices</label>
                                                @for (int j = 0; j < Model.Questions[i].Choices.Count; j++)
                                                {
                                                    <div class="input-group mb-2">
                                                        @Html.TextBoxFor(m => m.Questions[i].Choices[j].Text, new { @class = "form-control", placeholder = $"Choice {j + 1}", required = "required" })
                                                        <span class="input-group-text">
                                                            @Html.CheckBoxFor(m => m.Questions[i].Choices[j].IsCorrect)
                                                            <label class="form-check-label ms-1">Correct</label>
                                                        </span>
                                                    </div>
                                                }

                                            </div>
                                        }
                                    </div>
                                    <div class="d-grid gap-2 d-md-flex justify-content-md-end mt-4">
                                        <button type="submit" class="btn btn-success">
                                            <i class="fas fa-save me-2"></i>Save Quiz
                                        </button>
                                        <a href="list.html" class="btn btn-outline-secondary">
                                            <i class="fas fa-times me-2"></i>Cancel
                                        </a>
                                    </div>
                                </div>
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>

    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script src="../../../js/auth.js"></script>
    <script src="../../../js/admin.js"></script>

    <script>
        // Toggle sidebar
        $("#menu-toggle").click(function (e) {
            e.preventDefault();
            $("#wrapper").toggleClass("toggled");
        });

        // JavaScript for adding questions dynamically
        let questionIndex = @Model.Questions.Count;

        document.getElementById('addQuestionBtn').addEventListener('click', () => {
            const container = document.getElementById('questionsContainer');

                       const html = `
          <div class="mb-3">
              <label class="form-label">Question ${questionIndex + 1}</label>
              <input type="text" name="Questions[${questionIndex}].Title" class="form-control" required>
              <label class="form-label mt-2">Choices</label>
              ${[0,1,2,3].map(j => `
                  <div class="input-group mb-2">
                      <input type="text" name="Questions[${questionIndex}].Choices[${j}].Text" class="form-control" placeholder="Choice ${j + 1}" required>
                      <span class="input-group-text">
                          <input type="checkbox" name="Questions[${questionIndex}].Choices[${j}].IsCorrect" value="true">
                          <label class="ms-1">Correct</label>
                      </span>
                  </div>
              `).join('')}
          </div>
        `;

            container.insertAdjacentHTML('beforeend', html);
            questionIndex++;
        });
    </script>
</body>
</html>
